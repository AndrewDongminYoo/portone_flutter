// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'payment_request.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

PaymentRequest _$PaymentRequestFromJson(Map<String, dynamic> json) =>
    $checkedCreate(
      'PaymentRequest',
      json,
      ($checkedConvert) {
        final val = PaymentRequest(
          storeId: $checkedConvert('storeId', (v) => v! as String),
          paymentId: $checkedConvert('paymentId', (v) => v! as String),
          orderName: $checkedConvert('orderName', (v) => v! as String),
          totalAmount:
              $checkedConvert('totalAmount', (v) => (v! as num).toInt()),
          currency: $checkedConvert(
            'currency',
            (v) => $enumDecode(_$PaymentCurrencyEnumMap, v),
          ),
          payMethod: $checkedConvert(
            'payMethod',
            (v) => $enumDecode(_$PaymentPayMethodEnumMap, v),
          ),
          channelKey: $checkedConvert('channelKey', (v) => v as String?),
          channelGroupId:
              $checkedConvert('channelGroupId', (v) => v as String?),
          taxFreeAmount:
              $checkedConvert('taxFreeAmount', (v) => (v as num?)?.toInt()),
          vatAmount: $checkedConvert('vatAmount', (v) => (v as num?)?.toInt()),
          customer: $checkedConvert(
            'customer',
            (v) =>
                v == null ? null : Customer.fromJson(v as Map<String, dynamic>),
          ),
          customerId: $checkedConvert('customerId', (v) => v as String?),
          fullName: $checkedConvert('fullName', (v) => v as String?),
          firstName: $checkedConvert('firstName', (v) => v as String?),
          lastName: $checkedConvert('lastName', (v) => v as String?),
          phoneNumber: $checkedConvert('phoneNumber', (v) => v as String?),
          email: $checkedConvert('email', (v) => v as String?),
          address: $checkedConvert(
            'address',
            (v) =>
                v == null ? null : Address.fromJson(v as Map<String, dynamic>),
          ),
          mobile: $checkedConvert(
            'mobile',
            (v) => $enumDecodeNullable(_$WindowTypeEnumMap, v),
          ),
          redirectUrl: $checkedConvert('redirectUrl', (v) => v as String?),
          noticeUrls: $checkedConvert(
            'noticeUrls',
            (v) => (v as List<dynamic>?)?.map((e) => e as String).toList(),
          ),
          confirmUrl: $checkedConvert('confirmUrl', (v) => v as String?),
          appScheme: $checkedConvert('appScheme', (v) => v as String?),
          isEscrow: $checkedConvert('isEscrow', (v) => v as bool? ?? false),
          products: $checkedConvert(
            'products',
            (v) => (v as List<dynamic>?)
                ?.map(
                  (e) => ProductDetail.fromJson(e as Map<String, dynamic>),
                )
                .toList(),
          ),
          locale: $checkedConvert(
            'locale',
            (v) => $enumDecodeNullable(_$PaymentLocaleEnumMap, v),
          ),
          customData:
              $checkedConvert('customData', (v) => v as Map<String, dynamic>?),
          expiredTime: $checkedConvert('expiredTime', (v) => v as String?),
          cashReceiptTradeOption: $checkedConvert(
            'cashReceiptTradeOption',
            (v) => $enumDecodeNullable(_$CashReceiptTradeOptionEnumMap, v),
          ),
          offerPeriod: $checkedConvert(
            'offerPeriod',
            (v) => v == null
                ? null
                : OfferPeriod.fromJson(v as Map<String, dynamic>),
          ),
          kakaopay: $checkedConvert(
            'kakaopay',
            (v) => v == null
                ? null
                : KakaopayPaymentBypass.fromJson(v as Map<String, dynamic>),
          ),
          tosspayments: $checkedConvert(
            'tosspayments',
            (v) => v == null
                ? null
                : TosspaymentsPaymentBypass.fromJson(
                    v as Map<String, dynamic>,
                  ),
          ),
          tosspayV2: $checkedConvert(
            'tosspay_v2',
            (v) => v == null
                ? null
                : TosspayV2PaymentBypass.fromJson(v as Map<String, dynamic>),
          ),
        );
        return val;
      },
      fieldKeyMap: const {'tosspayV2': 'tosspay_v2'},
    );

Map<String, dynamic> _$PaymentRequestToJson(PaymentRequest instance) =>
    <String, dynamic>{
      'storeId': instance.storeId,
      'paymentId': instance.paymentId,
      'orderName': instance.orderName,
      'totalAmount': instance.totalAmount,
      'currency': _$PaymentCurrencyEnumMap[instance.currency],
      'payMethod': _$PaymentPayMethodEnumMap[instance.payMethod],
      if (instance.channelKey case final value?) 'channelKey': value,
      if (instance.channelGroupId case final value?) 'channelGroupId': value,
      if (instance.taxFreeAmount case final value?) 'taxFreeAmount': value,
      if (instance.vatAmount case final value?) 'vatAmount': value,
      if (instance.customer?.toJson() case final value?) 'customer': value,
      if (instance.customerId case final value?) 'customerId': value,
      if (instance.fullName case final value?) 'fullName': value,
      if (instance.firstName case final value?) 'firstName': value,
      if (instance.lastName case final value?) 'lastName': value,
      if (instance.phoneNumber case final value?) 'phoneNumber': value,
      if (instance.email case final value?) 'email': value,
      if (instance.address?.toJson() case final value?) 'address': value,
      if (_$WindowTypeEnumMap[instance.mobile] case final value?)
        'mobile': value,
      if (instance.redirectUrl case final value?) 'redirectUrl': value,
      if (instance.noticeUrls case final value?) 'noticeUrls': value,
      if (instance.confirmUrl case final value?) 'confirmUrl': value,
      if (instance.appScheme case final value?) 'appScheme': value,
      'isEscrow': instance.isEscrow,
      if (instance.products?.map((e) => e.toJson()).toList() case final value?)
        'products': value,
      if (_$PaymentLocaleEnumMap[instance.locale] case final value?)
        'locale': value,
      if (instance.customData case final value?) 'customData': value,
      if (instance.expiredTime case final value?) 'expiredTime': value,
      if (_$CashReceiptTradeOptionEnumMap[instance.cashReceiptTradeOption]
          case final value?)
        'cashReceiptTradeOption': value,
      if (instance.offerPeriod?.toJson() case final value?)
        'offerPeriod': value,
      if (instance.kakaopay?.toJson() case final value?) 'kakaopay': value,
      if (instance.tosspayments?.toJson() case final value?)
        'tosspayments': value,
      if (instance.tosspayV2?.toJson() case final value?) 'tosspay_v2': value,
    };

const _$PaymentCurrencyEnumMap = {
  PaymentCurrency.KRW: 'CURRENCY_KRW',
  PaymentCurrency.USD: 'CURRENCY_USD',
  PaymentCurrency.EUR: 'CURRENCY_EUR',
  PaymentCurrency.JPY: 'CURRENCY_JPY',
  PaymentCurrency.CNY: 'CURRENCY_CNY',
  PaymentCurrency.VND: 'CURRENCY_VND',
  PaymentCurrency.THB: 'CURRENCY_THB',
  PaymentCurrency.SGD: 'CURRENCY_SGD',
  PaymentCurrency.AUD: 'CURRENCY_AUD',
  PaymentCurrency.HKD: 'CURRENCY_HKD',
  PaymentCurrency.AED: 'CURRENCY_AED',
  PaymentCurrency.AFN: 'CURRENCY_AFN',
  PaymentCurrency.ALL: 'CURRENCY_ALL',
  PaymentCurrency.AMD: 'CURRENCY_AMD',
  PaymentCurrency.ANG: 'CURRENCY_ANG',
  PaymentCurrency.AOA: 'CURRENCY_AOA',
  PaymentCurrency.ARS: 'CURRENCY_ARS',
  PaymentCurrency.AWG: 'CURRENCY_AWG',
  PaymentCurrency.AZN: 'CURRENCY_AZN',
  PaymentCurrency.BAM: 'CURRENCY_BAM',
  PaymentCurrency.BBD: 'CURRENCY_BBD',
  PaymentCurrency.BDT: 'CURRENCY_BDT',
  PaymentCurrency.BGN: 'CURRENCY_BGN',
  PaymentCurrency.BHD: 'CURRENCY_BHD',
  PaymentCurrency.BIF: 'CURRENCY_BIF',
  PaymentCurrency.BMD: 'CURRENCY_BMD',
  PaymentCurrency.BND: 'CURRENCY_BND',
  PaymentCurrency.BOB: 'CURRENCY_BOB',
  PaymentCurrency.BOV: 'CURRENCY_BOV',
  PaymentCurrency.BRL: 'CURRENCY_BRL',
  PaymentCurrency.BSD: 'CURRENCY_BSD',
  PaymentCurrency.BTN: 'CURRENCY_BTN',
  PaymentCurrency.BWP: 'CURRENCY_BWP',
  PaymentCurrency.BYN: 'CURRENCY_BYN',
  PaymentCurrency.BZD: 'CURRENCY_BZD',
  PaymentCurrency.CAD: 'CURRENCY_CAD',
  PaymentCurrency.CDF: 'CURRENCY_CDF',
  PaymentCurrency.CHE: 'CURRENCY_CHE',
  PaymentCurrency.CHF: 'CURRENCY_CHF',
  PaymentCurrency.CHW: 'CURRENCY_CHW',
  PaymentCurrency.CLF: 'CURRENCY_CLF',
  PaymentCurrency.CLP: 'CURRENCY_CLP',
  PaymentCurrency.COP: 'CURRENCY_COP',
  PaymentCurrency.COU: 'CURRENCY_COU',
  PaymentCurrency.CRC: 'CURRENCY_CRC',
  PaymentCurrency.CUC: 'CURRENCY_CUC',
  PaymentCurrency.CUP: 'CURRENCY_CUP',
  PaymentCurrency.CVE: 'CURRENCY_CVE',
  PaymentCurrency.CZK: 'CURRENCY_CZK',
  PaymentCurrency.DJF: 'CURRENCY_DJF',
  PaymentCurrency.DKK: 'CURRENCY_DKK',
  PaymentCurrency.DOP: 'CURRENCY_DOP',
  PaymentCurrency.DZD: 'CURRENCY_DZD',
  PaymentCurrency.EGP: 'CURRENCY_EGP',
  PaymentCurrency.ERN: 'CURRENCY_ERN',
  PaymentCurrency.ETB: 'CURRENCY_ETB',
  PaymentCurrency.FJD: 'CURRENCY_FJD',
  PaymentCurrency.FKP: 'CURRENCY_FKP',
  PaymentCurrency.GBP: 'CURRENCY_GBP',
  PaymentCurrency.GEL: 'CURRENCY_GEL',
  PaymentCurrency.GHS: 'CURRENCY_GHS',
  PaymentCurrency.GIP: 'CURRENCY_GIP',
  PaymentCurrency.GMD: 'CURRENCY_GMD',
  PaymentCurrency.GNF: 'CURRENCY_GNF',
  PaymentCurrency.GTQ: 'CURRENCY_GTQ',
  PaymentCurrency.GYD: 'CURRENCY_GYD',
  PaymentCurrency.HNL: 'CURRENCY_HNL',
  PaymentCurrency.HRK: 'CURRENCY_HRK',
  PaymentCurrency.HTG: 'CURRENCY_HTG',
  PaymentCurrency.HUF: 'CURRENCY_HUF',
  PaymentCurrency.IDR: 'CURRENCY_IDR',
  PaymentCurrency.ILS: 'CURRENCY_ILS',
  PaymentCurrency.INR: 'CURRENCY_INR',
  PaymentCurrency.IQD: 'CURRENCY_IQD',
  PaymentCurrency.IRR: 'CURRENCY_IRR',
  PaymentCurrency.ISK: 'CURRENCY_ISK',
  PaymentCurrency.JMD: 'CURRENCY_JMD',
  PaymentCurrency.JOD: 'CURRENCY_JOD',
  PaymentCurrency.KES: 'CURRENCY_KES',
  PaymentCurrency.KGS: 'CURRENCY_KGS',
  PaymentCurrency.KHR: 'CURRENCY_KHR',
  PaymentCurrency.KMF: 'CURRENCY_KMF',
  PaymentCurrency.KPW: 'CURRENCY_KPW',
  PaymentCurrency.KWD: 'CURRENCY_KWD',
  PaymentCurrency.KYD: 'CURRENCY_KYD',
  PaymentCurrency.KZT: 'CURRENCY_KZT',
  PaymentCurrency.LAK: 'CURRENCY_LAK',
  PaymentCurrency.LBP: 'CURRENCY_LBP',
  PaymentCurrency.LKR: 'CURRENCY_LKR',
  PaymentCurrency.LRD: 'CURRENCY_LRD',
  PaymentCurrency.LSL: 'CURRENCY_LSL',
  PaymentCurrency.LYD: 'CURRENCY_LYD',
  PaymentCurrency.MAD: 'CURRENCY_MAD',
  PaymentCurrency.MDL: 'CURRENCY_MDL',
  PaymentCurrency.MGA: 'CURRENCY_MGA',
  PaymentCurrency.MKD: 'CURRENCY_MKD',
  PaymentCurrency.MMK: 'CURRENCY_MMK',
  PaymentCurrency.MNT: 'CURRENCY_MNT',
  PaymentCurrency.MOP: 'CURRENCY_MOP',
  PaymentCurrency.MRU: 'CURRENCY_MRU',
  PaymentCurrency.MUR: 'CURRENCY_MUR',
  PaymentCurrency.MVR: 'CURRENCY_MVR',
  PaymentCurrency.MWK: 'CURRENCY_MWK',
  PaymentCurrency.MXN: 'CURRENCY_MXN',
  PaymentCurrency.MXV: 'CURRENCY_MXV',
  PaymentCurrency.MZN: 'CURRENCY_MZN',
  PaymentCurrency.NAD: 'CURRENCY_NAD',
  PaymentCurrency.NGN: 'CURRENCY_NGN',
  PaymentCurrency.NIO: 'CURRENCY_NIO',
  PaymentCurrency.NOK: 'CURRENCY_NOK',
  PaymentCurrency.NPR: 'CURRENCY_NPR',
  PaymentCurrency.NZD: 'CURRENCY_NZD',
  PaymentCurrency.OMR: 'CURRENCY_OMR',
  PaymentCurrency.PAB: 'CURRENCY_PAB',
  PaymentCurrency.PEN: 'CURRENCY_PEN',
  PaymentCurrency.PGK: 'CURRENCY_PGK',
  PaymentCurrency.PHP: 'CURRENCY_PHP',
  PaymentCurrency.PKR: 'CURRENCY_PKR',
  PaymentCurrency.PLN: 'CURRENCY_PLN',
  PaymentCurrency.PYG: 'CURRENCY_PYG',
  PaymentCurrency.QAR: 'CURRENCY_QAR',
  PaymentCurrency.RON: 'CURRENCY_RON',
  PaymentCurrency.RSD: 'CURRENCY_RSD',
  PaymentCurrency.RUB: 'CURRENCY_RUB',
  PaymentCurrency.RWF: 'CURRENCY_RWF',
  PaymentCurrency.SAR: 'CURRENCY_SAR',
  PaymentCurrency.SBD: 'CURRENCY_SBD',
  PaymentCurrency.SCR: 'CURRENCY_SCR',
  PaymentCurrency.SDG: 'CURRENCY_SDG',
  PaymentCurrency.SEK: 'CURRENCY_SEK',
  PaymentCurrency.SHP: 'CURRENCY_SHP',
  PaymentCurrency.SLE: 'CURRENCY_SLE',
  PaymentCurrency.SLL: 'CURRENCY_SLL',
  PaymentCurrency.SOS: 'CURRENCY_SOS',
  PaymentCurrency.SRD: 'CURRENCY_SRD',
  PaymentCurrency.SSP: 'CURRENCY_SSP',
  PaymentCurrency.STN: 'CURRENCY_STN',
  PaymentCurrency.SVC: 'CURRENCY_SVC',
  PaymentCurrency.SYP: 'CURRENCY_SYP',
  PaymentCurrency.SZL: 'CURRENCY_SZL',
  PaymentCurrency.TJS: 'CURRENCY_TJS',
  PaymentCurrency.TMT: 'CURRENCY_TMT',
  PaymentCurrency.TND: 'CURRENCY_TND',
  PaymentCurrency.TOP: 'CURRENCY_TOP',
  PaymentCurrency.TRY: 'CURRENCY_TRY',
  PaymentCurrency.TTD: 'CURRENCY_TTD',
  PaymentCurrency.TWD: 'CURRENCY_TWD',
  PaymentCurrency.TZS: 'CURRENCY_TZS',
  PaymentCurrency.UAH: 'CURRENCY_UAH',
  PaymentCurrency.UGX: 'CURRENCY_UGX',
  PaymentCurrency.USN: 'CURRENCY_USN',
  PaymentCurrency.UYI: 'CURRENCY_UYI',
  PaymentCurrency.UYU: 'CURRENCY_UYU',
  PaymentCurrency.UYW: 'CURRENCY_UYW',
  PaymentCurrency.UZS: 'CURRENCY_UZS',
  PaymentCurrency.VED: 'CURRENCY_VED',
  PaymentCurrency.VES: 'CURRENCY_VES',
  PaymentCurrency.VUV: 'CURRENCY_VUV',
  PaymentCurrency.WST: 'CURRENCY_WST',
  PaymentCurrency.XAF: 'CURRENCY_XAF',
  PaymentCurrency.XAG: 'CURRENCY_XAG',
  PaymentCurrency.XAU: 'CURRENCY_XAU',
  PaymentCurrency.XBA: 'CURRENCY_XBA',
  PaymentCurrency.XBB: 'CURRENCY_XBB',
  PaymentCurrency.XBC: 'CURRENCY_XBC',
  PaymentCurrency.XBD: 'CURRENCY_XBD',
  PaymentCurrency.XCD: 'CURRENCY_XCD',
  PaymentCurrency.XDR: 'CURRENCY_XDR',
  PaymentCurrency.XOF: 'CURRENCY_XOF',
  PaymentCurrency.XPD: 'CURRENCY_XPD',
  PaymentCurrency.XPF: 'CURRENCY_XPF',
  PaymentCurrency.XPT: 'CURRENCY_XPT',
  PaymentCurrency.XSU: 'CURRENCY_XSU',
  PaymentCurrency.XTS: 'CURRENCY_XTS',
  PaymentCurrency.XUA: 'CURRENCY_XUA',
  PaymentCurrency.XXX: 'CURRENCY_XXX',
  PaymentCurrency.YER: 'CURRENCY_YER',
  PaymentCurrency.ZAR: 'CURRENCY_ZAR',
  PaymentCurrency.ZMW: 'CURRENCY_ZMW',
  PaymentCurrency.ZWL: 'CURRENCY_ZWL',
};

const _$PaymentPayMethodEnumMap = {
  PaymentPayMethod.CARD: 'CARD',
  PaymentPayMethod.VIRTUAL_ACCOUNT: 'VIRTUAL_ACCOUNT',
  PaymentPayMethod.TRANSFER: 'TRANSFER',
  PaymentPayMethod.MOBILE: 'MOBILE',
  PaymentPayMethod.GIFT_CERTIFICATE: 'GIFT_CERTIFICATE',
  PaymentPayMethod.EASY_PAY: 'EASY_PAY',
  PaymentPayMethod.PAYPAL: 'PAYPAL',
};

const _$WindowTypeEnumMap = {
  WindowType.IFRAME: 'IFRAME',
  WindowType.POPUP: 'POPUP',
  WindowType.REDIRECTION: 'REDIRECTION',
  WindowType.UI: 'UI',
};

const _$PaymentLocaleEnumMap = {
  PaymentLocale.KO_KR: 'KO_KR',
  PaymentLocale.EN_US: 'EN_US',
};

const _$CashReceiptTradeOptionEnumMap = {
  CashReceiptTradeOption.CULTURE: 'CULTURE',
  CashReceiptTradeOption.GENERAL: 'GENERAL',
  CashReceiptTradeOption.PUBLIC_TP: 'PUBLIC_TP',
};
